//
//  HorizontalView.swift
//  CoinMockup
//
//  Created by ÏóºÏÑ±ÌïÑ on 2023/11/27.
//

import SwiftUI

struct HorizontalView: View {
    
    @StateObject var viewModel = HorizontalViewModel()
    
    var body: some View {
        ScrollView {
            Text("\(viewModel.value)")
            // ÏÉÅÏúÑ Î∑∞Ïùò(VStack) ÏÇ¨Ïù¥Ï¶àÏóê ÎπÑÎ°ÄÌï¥ÏÑú ÌïòÏúÑ Î∑∞Ïùò ÏÇ¨Ïù¥Ï¶à ÎπÑÏú®Î°ú ÏÑ§Ï†ïÌï† Ïàò ÏûàÏùå
            GeometryReader { proxy in
                
                let grapWidth = proxy.size.width * 0.7// Ï±†Ìä∏ ÏµúÎåÄ ÎÑàÎπÑ
                
                VStack {
                    ForEach(viewModel.askOrderBook, id: \.id) { item in
                        HStack(spacing: 10) {
                            Text("\(item.size)")
                                .frame(width: proxy.size.width * 0.2)
                                .background(.green)
                            ZStack(alignment: .leading)  {
                                // Í∞ÅÍ∞ÅÏùò  dummyDataÍ∞Ä Í∞ÄÏ†∏ÏïºÌïòÎäî Îç∞Ïù¥ÌÑ∞
                                let graphSize = CGFloat(item.price) / CGFloat(viewModel.largestAskSize()) * grapWidth
                                Rectangle()
                                    .foregroundStyle(.blue.opacity(0.4))
                                    // RectangleÏóê ÎåÄÌïú ÏµúÎåÄ Í∏∏Ïù¥Ïóê ÎåÄÌïú ÌïúÎ≤àÎçî geometryReaderÎ•º ÌôúÏö©ÌïòÏó¨ ÎπÑÏú®ÏùÑ Ïû°ÏïÑÏïº ÎÑòÏñ¥Í∞ÄÏßÄ ÏïäÏùå ... üßê Ïñ¥ÎñªÍ≤å ÌïòÎ©¥ Ï¢ãÏùÑÍπå??
                                    // => ÌòÑÏû¨ ponit / ÏµúÎåÄ Í∞í point * VStackÏùò Í∞ÄÎ°ú Í∏∏Ïù¥
                                    .frame(width: CGFloat(graphSize))
                                    .frame(maxWidth: grapWidth, alignment: .leading)
                                
                                Text("\(item.price)")
                                    .frame(width: grapWidth)
                            }
                           
                            .background(.gray)
                        }
                        .background(.yellow)
                        .frame(height: 40)
                    }
                }
                .padding()
            }
        }
        .onAppear {
//             viewModel.timer()
            viewModel.fetchOrderBook()
        }
    }
}

struct HorizontalView_Previews: PreviewProvider {
    static var previews: some View {
        HorizontalView()
    }
}
